/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import cliente.Cliente;
import java.util.ArrayList;
import java.util.Scanner;
import lineasListas.LineaEnrutamiento;
import lineasListas.LineaWatcher;

/**
 *
 * @author raul
 */
public class Watchers extends javax.swing.JPanel {

    private BienvenidaFrame frame;
    
    /**
     * Creates new form Watchers
     */
    public Watchers(BienvenidaFrame frame) {
        initComponents();
        this.frame = frame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        watchers_jscroll = new javax.swing.JScrollPane();
        watchers_panel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        destino = new javax.swing.JLabel();
        pasarela = new javax.swing.JLabel();
        genmask = new javax.swing.JLabel();
        indic = new javax.swing.JLabel();
        metric = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        watchers_editable_proceso = new javax.swing.JTextField();
        watchers_editable_argumentos = new javax.swing.JTextField();
        watchers_boton_anadir = new javax.swing.JButton();
        watchers_actualizar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        watchers_jscroll.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        watchers_panel.setBackground(new java.awt.Color(254, 254, 254));
        watchers_panel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        watchers_panel.setPreferredSize(new java.awt.Dimension(100, 300));
        watchers_panel.setLayout(new javax.swing.BoxLayout(watchers_panel, javax.swing.BoxLayout.Y_AXIS));
        watchers_jscroll.setViewportView(watchers_panel);

        add(watchers_jscroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 694, 400));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setMaximumSize(new java.awt.Dimension(32767, 45));
        jPanel2.setMinimumSize(new java.awt.Dimension(469, 45));
        jPanel2.setPreferredSize(new java.awt.Dimension(694, 45));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel3.setText("    ");
        jPanel2.add(jLabel3);

        destino.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        destino.setText("PROCESO");
        destino.setPreferredSize(new java.awt.Dimension(150, 18));
        jPanel2.add(destino);

        pasarela.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pasarela.setText("ESTADO");
        pasarela.setMaximumSize(new java.awt.Dimension(20, 18));
        pasarela.setMinimumSize(new java.awt.Dimension(20, 18));
        pasarela.setPreferredSize(new java.awt.Dimension(75, 18));
        jPanel2.add(pasarela);

        genmask.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        genmask.setText("HIJOS");
        genmask.setPreferredSize(new java.awt.Dimension(50, 18));
        jPanel2.add(genmask);

        indic.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        indic.setText("UBICACIÓN");
        indic.setPreferredSize(new java.awt.Dimension(150, 18));
        indic.setRequestFocusEnabled(false);
        jPanel2.add(indic);

        metric.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        metric.setText("ARGUMENTOS");
        metric.setPreferredSize(new java.awt.Dimension(200, 18));
        jPanel2.add(metric);

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        watchers_editable_proceso.setText("proceso");
        watchers_editable_proceso.setToolTipText("Proceso");
        watchers_editable_proceso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                watchers_editable_procesoFocusGained(evt);
            }
        });
        watchers_editable_proceso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                watchers_editable_procesoKeyPressed(evt);
            }
        });
        jPanel1.add(watchers_editable_proceso, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 140, -1));

        watchers_editable_argumentos.setText("argumentos");
        watchers_editable_argumentos.setToolTipText("Argumentos");
        watchers_editable_argumentos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                watchers_editable_argumentosFocusGained(evt);
            }
        });
        watchers_editable_argumentos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                watchers_editable_argumentosKeyPressed(evt);
            }
        });
        jPanel1.add(watchers_editable_argumentos, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 420, -1));

        watchers_boton_anadir.setText("Añadir");
        watchers_boton_anadir.setToolTipText("Añadir watcher");
        watchers_boton_anadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                watchers_boton_anadirActionPerformed(evt);
            }
        });
        jPanel1.add(watchers_boton_anadir, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, 80, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 694, 55));

        watchers_actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/baseline_autorenew_black_24dp.png"))); // NOI18N
        watchers_actualizar.setToolTipText("Refrescar");
        watchers_actualizar.setPreferredSize(new java.awt.Dimension(36, 36));
        watchers_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                watchers_actualizarActionPerformed(evt);
            }
        });
        add(watchers_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 34)); // NOI18N
        jLabel1.setText("WATCHERS");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void watchers_boton_anadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_watchers_boton_anadirActionPerformed
        // TODO add your handling code here:
        if (watchers_editable_argumentos.getText().equals("argumentos")||watchers_editable_argumentos.getText().equals("")){
            frame.getCliente().peticion(Cliente.ANADE_W + watchers_editable_proceso.getText());
        }
        else {
            frame.getCliente().peticion(Cliente.ANADE_W + watchers_editable_proceso.getText()+"\n"+watchers_editable_argumentos.getText());
        }
        actualizarWatchers();
    }//GEN-LAST:event_watchers_boton_anadirActionPerformed

    private void watchers_editable_argumentosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_watchers_editable_argumentosFocusGained
        // TODO add your handling code here:
        watchers_editable_argumentos.setText("");
    }//GEN-LAST:event_watchers_editable_argumentosFocusGained

    private void watchers_editable_procesoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_watchers_editable_procesoFocusGained
        // TODO add your handling code here:
        watchers_editable_proceso.setText("");
    }//GEN-LAST:event_watchers_editable_procesoFocusGained

    private void watchers_editable_procesoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_watchers_editable_procesoKeyPressed
        // TODO add your handling code here:
        if (java.awt.event.KeyEvent.VK_ENTER == evt.getKeyCode()){
            watchers_boton_anadirActionPerformed(null);
        }
    }//GEN-LAST:event_watchers_editable_procesoKeyPressed

    private void watchers_editable_argumentosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_watchers_editable_argumentosKeyPressed
        // TODO add your handling code here:
        if (java.awt.event.KeyEvent.VK_ENTER == evt.getKeyCode()){
            watchers_boton_anadirActionPerformed(null);
        }
    }//GEN-LAST:event_watchers_editable_argumentosKeyPressed

    private void watchers_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_watchers_actualizarActionPerformed
        // TODO add your handling code here:
        actualizarWatchers();
    }//GEN-LAST:event_watchers_actualizarActionPerformed

    public void actualizarWatchers(){//refresca toda la interfaces del frame
        watchers_panel.removeAll();
        
        String temp = frame.getCliente().peticion(Character.toString(Cliente.DAME_W_Y_C));
        if(temp.equals("") || temp == null){
            watchers_panel.revalidate();
            watchers_panel.repaint();
            return;
        }
        String[] linea = temp.split(System.getProperty("line.separator"));
        for (int i = 0; i < linea.length; i = i+2) {
            String ubicacion = frame.getCliente().peticion(Character.toString(Cliente.DAME_PATH) + linea[i]);
            if(!ubicacion.equals("")){
                
                String PIDyEstado = frame.getCliente().peticion(Character.toString(Cliente.DAME_PID_ESTADO)+linea[i]);
                if(PIDyEstado.equals("")){
                    if(i+1 >= linea.length)watchers_panel.add(new LineaWatcher(linea[i], "muerto", "0", ubicacion, "----", frame));
                    else watchers_panel.add(new LineaWatcher(linea[i], "muerto", "0", ubicacion, linea[i+1], frame));
                }
                else{
                    String[] linea2 = PIDyEstado.split(System.getProperty("line.separator"));
                    if(i+1 >= linea.length)watchers_panel.add(new LineaWatcher(linea[i], "corriendo", String.valueOf(linea2.length), ubicacion, "----", frame));
                    else watchers_panel.add(new LineaWatcher(linea[i], "corriendo", String.valueOf(linea2.length), ubicacion, linea[i+1], frame));
                }
            }
            else 
                if(i+1 >= linea.length)watchers_panel.add(new LineaWatcher(linea[i], "no encontrado", "----", "----", "----", frame));
                else watchers_panel.add(new LineaWatcher(linea[i], "no encontrado", "----", "----", linea[i+1], frame));
                
                   
        }
        
        watchers_panel.revalidate();
        watchers_panel.repaint();
        
    }
            

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel destino;
    private javax.swing.JLabel genmask;
    private javax.swing.JLabel indic;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel metric;
    private javax.swing.JLabel pasarela;
    private javax.swing.JButton watchers_actualizar;
    private javax.swing.JButton watchers_boton_anadir;
    private javax.swing.JTextField watchers_editable_argumentos;
    private javax.swing.JTextField watchers_editable_proceso;
    private javax.swing.JScrollPane watchers_jscroll;
    private javax.swing.JPanel watchers_panel;
    // End of variables declaration//GEN-END:variables
}

