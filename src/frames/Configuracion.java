/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import cliente.Cliente;
import misc.IP;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author raul
 */
public class Configuracion extends javax.swing.JPanel {

    private BienvenidaFrame frame;
    private ArrayList<IP> ips;
    
    /**
     * Creates new form Configuracion
     */
    public Configuracion(BienvenidaFrame frame) {
        initComponents();
        this.frame = frame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        config_boton_aplicar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        config_combo_ip = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        config_texto_puerto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        config_texto_timeout_servidor = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        config_texto_timeout_cliente = new javax.swing.JTextField();
        config_actualizar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        config_boton_aplicar.setText("Aplicar");
        config_boton_aplicar.setToolTipText("Guardar cambios");
        config_boton_aplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                config_boton_aplicarActionPerformed(evt);
            }
        });

        jButton3.setText("Descartar");
        jButton3.setToolTipText("Descartar cambios");

        jPanel1.setPreferredSize(new java.awt.Dimension(660, 500));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Servidor"));

        jLabel2.setText("IP:");

        config_combo_ip.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0.0.0.0", "0.0.0.0" }));
        config_combo_ip.setToolTipText("ip servidor");

        jLabel9.setText("Puerto:");

        config_texto_puerto.setText("4040");
        config_texto_puerto.setToolTipText("puerto servidor (4040 predeterminado)");

        jLabel1.setText("Timeout");

        config_texto_timeout_servidor.setText("0000");
        config_texto_timeout_servidor.setToolTipText("timeout servidor");
        config_texto_timeout_servidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                config_texto_timeout_servidorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(config_combo_ip, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(config_texto_puerto, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(config_texto_timeout_servidor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(255, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(config_combo_ip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel9)
                    .addComponent(config_texto_puerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(config_texto_timeout_servidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 18, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Cliente"));

        jLabel3.setText("Timeout");

        config_texto_timeout_cliente.setText("0000");
        config_texto_timeout_cliente.setToolTipText("timeout cliente");
        config_texto_timeout_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                config_texto_timeout_clienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(config_texto_timeout_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(config_texto_timeout_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        config_actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/baseline_autorenew_black_24dp.png"))); // NOI18N
        config_actualizar.setToolTipText("Refrescar");
        config_actualizar.setPreferredSize(new java.awt.Dimension(36, 36));
        config_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                config_actualizarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 34)); // NOI18N
        jLabel4.setText("CONFIGURACIÃ“N");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(config_actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(jLabel4)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(config_actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(28, 28, 28)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(208, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(272, 272, 272)
                .addComponent(config_boton_aplicar)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(config_boton_aplicar)
                    .addComponent(jButton3))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void config_boton_aplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_config_boton_aplicarActionPerformed
        // TODO add your handling code here:
        try{
            int p,ts,tc;
            p = Integer.parseInt(config_texto_puerto.getText());
            ts = Integer.parseInt(config_texto_timeout_servidor.getText());
            tc = Integer.parseInt(config_texto_timeout_cliente.getText());
            if(p<1025||p>65535){
                frame.pop_up("Introduzca un puerto vÃ¡lido [1025,65535]");
                return;
            }
            if(ts<60 && ts!=0||ts>3600){
                frame.pop_up("Introduzca un timeout vÃ¡lido [60,3600]ms Ã³ [0] para desactivar el timeout");
                return;
            }
            if(tc<1000 && ts!=10000||tc>3600){
                frame.pop_up("Introduzca un timeout vÃ¡lido [1000,10000]ms");
                return;
            }

            frame.setIpServer((String)config_combo_ip.getSelectedItem());
            frame.setPuertoServer(config_texto_puerto.getText());
            frame.cambiarADesconectado();
            String s = frame.getCliente().peticion(Character.toString(frame.getCliente().CAMBIO_IP)+frame.getIpServer()+":"+frame.getPuertoServer());
            if(s.equals("00"))return;
            else if(s.equals("hecho")){
                frame.setCliente(new Cliente(frame.getIpServer(),Integer.parseInt(frame.getPuertoServer()),frame));
                frame.getCliente().inicializar();
                s = frame.getCliente().peticion(Character.toString(frame.getCliente().DAME_IP));
                if(s.equals("00"))return;
                frame.cambiarAConectado();
                decodeIPS(s);
            }
            frame.getCliente().setTimeout(Integer.parseInt(config_texto_timeout_cliente.getText()));
            frame.getCliente().peticion(Cliente.CAMBIA_TIMEOUT + "" + config_texto_timeout_servidor.getText());
        }
        catch(Exception ex){
            frame.pop_up(ex.getMessage());
            actualizarConfiguracion();
        }
    }//GEN-LAST:event_config_boton_aplicarActionPerformed

    private void config_texto_timeout_servidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_config_texto_timeout_servidorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_config_texto_timeout_servidorActionPerformed

    private void config_texto_timeout_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_config_texto_timeout_clienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_config_texto_timeout_clienteActionPerformed

    private void config_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_config_actualizarActionPerformed
        // TODO add your handling code here:
        actualizarConfiguracion();
    }//GEN-LAST:event_config_actualizarActionPerformed

    public void actualizarConfiguracion(){
        String s = frame.getCliente().peticion(String.valueOf(Cliente.DAME_IP));
        if (s.equals("00")){
            frame.cambiarADesconectado();
            return;
        }
        decodeIPS(s);
        ArrayList<String> list = new ArrayList<String>();
        for (IP i : ips) {
                list.add(i.getIp());
                //System.out.println("["+s+"]");
        }
        config_combo_ip.setModel(new DefaultComboBoxModel<String>((String[])list.toArray(new String[list.size()])));
        config_combo_ip.setSelectedItem(frame.getIpServer());
        //System.out.println("["+ipServer+"]");
        config_texto_puerto.setText(frame.getPuertoServer());
        config_texto_timeout_cliente.setText(String.valueOf(frame.getCliente().getTimeout()));
        s = frame.getCliente().peticion(String.valueOf(Cliente.DAME_TIMEOUT));
        if (s.equals("00")){
            config_texto_timeout_servidor.setText("0");
            return;
        }
        config_texto_timeout_servidor.setText(s);
        
        
            
    }
    
    public ArrayList<IP> decodeIPS(String s){
        ips = new ArrayList<IP>();
        String name = "";
        String mac = "";
        String ipTemp = "";
        int fase = 0;
        
        for(int i = 0; s.length() > i; i++){
            switch (fase){
                case 0:
                    if (s.charAt(i) == '|');
                    else if(s.charAt(i) != '/')
                        name = name + s.charAt(i);
                    else fase ++;
                    break;
                case 1:
                    if(s.length()- 1 == i){
                        ipTemp = ipTemp + s.charAt(i);
                        ips.add(new IP(name, mac, ipTemp.replace("|", "")));
                    }    
                    else if(s.charAt(i)!='|')
                        ipTemp = ipTemp + s.charAt(i);
                    else fase ++;
                    break;
                case 2:
                    ips.add(new IP(name, mac, ipTemp));
                    name = "";
                    ipTemp = "";
                    fase = 0;
                    break;
            }
            
        }
        return ips;
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton config_actualizar;
    private javax.swing.JButton config_boton_aplicar;
    private javax.swing.JComboBox<String> config_combo_ip;
    private javax.swing.JTextField config_texto_puerto;
    private javax.swing.JTextField config_texto_timeout_cliente;
    private javax.swing.JTextField config_texto_timeout_servidor;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
